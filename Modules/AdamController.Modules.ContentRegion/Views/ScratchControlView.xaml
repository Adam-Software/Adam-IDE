<UserControl x:Class="AdamController.Modules.ContentRegion.Views.ScratchControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:properties="clr-namespace:AdamController.Core.Properties;assembly=AdamController.Core"
             xmlns:converters="clr-namespace:AdamController.Core.Converters;assembly=AdamController.Core"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:webControl="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf" 
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:AdamController.Core.Behaviors;assembly=AdamController.Core"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:prism="http://prismlibrary.com/" 
             prism:ViewModelLocator.AutoWireViewModel="True">
    
    <UserControl.Resources>
        <converters:GridLengthConverter x:Key="GridLengthConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </UserControl.Resources>

   
        
        <Grid x:Name="MainGrid">

            <!--#region Definitions -->
            
            <Grid.RowDefinitions>
                <!-- buttons 0 Empty -->
                <RowDefinition Height="0"/>
                <!-- webview and source editor  1 -->
                <RowDefinition Height="*"/>
                <!--splitter 2-->
                <RowDefinition Height="Auto"/>
                <!-- result 3 -->
                <RowDefinition Height="{Binding Path=BlocklySourceEditorHeight, Mode=TwoWay, 
                                                Converter={StaticResource GridLengthConverter}, Source={x:Static properties:Settings.Default }}">
                    <RowDefinition.Style>
                        <Style TargetType="{x:Type RowDefinition}">
                            <!-- Default MinHeight -->
                            <Setter Property="MinHeight" Value="150" />
                            <Setter Property="MaxHeight" Value="500" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ResultExpander, Path=IsExpanded}" Value="False">
                                    <Setter Property="MinHeight" Value="25" />
                                    <!-- MinHeight when Collapsed -->
                                    <Setter Property="MaxHeight" Value="25" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="BlocklyColumn" Width="{Binding Path=BlocklyEditorWidth, Mode=TwoWay, 
                    Converter={StaticResource GridLengthConverter}, Source={x:Static properties:Settings.Default }}"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--#endregion-->

            <!--#region  web view -->

            <DockPanel Grid.Column="0"
                       Grid.Row="1"
                       Margin="2 7 0 0"
                       LastChildFill="True">

                <DockPanel Margin="5 0 0 5" DockPanel.Dock="Top">

                    <Button Padding="2" Command="{Binding ShowOpenFileDialogDelegateCommand}" 
                            CommandParameter="Workspace">
                        <iconPacks:PackIconMaterial Padding="2" Kind="FolderOpen" />
                    </Button>
                    <Button Padding="2" Margin="3 0 7 0" 
                            Command="{Binding ShowSaveFileDialogDelegateCommand}"
                            CommandParameter="Workspace">
                        <iconPacks:PackIconMaterial  Padding="2" Kind="ContentSave" />
                    </Button>
                <Button Padding="2" HorizontalAlignment="Left" Command="{Binding ReloadWebViewDelegateCommand}" >
                    <iconPacks:PackIconMaterial  Padding="2"  Kind="Reload" />
                </Button>
                    
            </DockPanel>

            <Border DockPanel.Dock="Top"  Margin="-1 0 0 0" BorderThickness="0 1 0 0"/>

            <webControl:WebView2  DockPanel.Dock="Top"
                                      Name="WebView"
                                      DefaultBackgroundColor="Transparent"
                                       
                                      ZoomFactor="{Binding WebViewZoomFactor, Mode=TwoWay, Source={x:Static properties:Settings.Default }}"
                                      Margin="0"/>
            </DockPanel>

            <!--#endregion-->

            <!--#region vertical splitter -->

            <GridSplitter Grid.Column="1" 
                          Grid.Row="1" 
                          Width="1"
                          Background="{DynamicResource MahApps.Brushes.Text}"/>

            <!--#endregion-->

            <!--#region code editor -->

            <DockPanel Grid.Row="1"
                       Grid.Column="2"
                       Margin="0 7 5 5"
                       LastChildFill="True">

                <DockPanel Margin="5 0 0 5" DockPanel.Dock="Top">
                    <Button Padding="2" Command="{Binding ShowOpenFileDialogDelegateCommand}" 
                            CommandParameter="Script">
                    
                        <iconPacks:PackIconMaterial Padding="2" Kind="FolderOpen" />
                    </Button>

                <Button HorizontalAlignment="Left" 
                        Margin="3 0 7 0"
                        Padding="2"
                        Command="{Binding ShowSaveFileDialogDelegateCommand}"
                        CommandParameter="Script">
                    <iconPacks:PackIconMaterial  Padding="2" Kind="ContentSave" />
                </Button>

                <ToggleButton x:Name="ShowLineNumberButton" 
                                  HorizontalAlignment="Left"     
                                  Padding="2"
                                  IsChecked="{Binding ShowLineNumber, Mode=TwoWay, Source={x:Static properties:Settings.Default }}"
                                  IsEnabled="{Binding IsPythonCodeExecute, Converter={StaticResource InverseBooleanConverter}}">
                        <iconPacks:PackIconMaterial Padding="2" Kind="Numeric" />
                    </ToggleButton>

                    
                    <ToggleButton x:Name="ReadOnlyButton" 
                                  Margin="3 0 0 0"
                                  HorizontalAlignment="Left"     
                                  Padding="2"
                                  IsChecked="{Binding EditorIsReadOnly, Mode=TwoWay, 
                                              Source={x:Static properties:Settings.Default}}"
                                  IsEnabled="{Binding IsPythonCodeExecute, Converter={StaticResource InverseBooleanConverter}}">
                        <iconPacks:PackIconCodicons Padding="2" Kind="Edit" />
                    </ToggleButton>


                    <ToggleButton x:Name="ShowEndOfLineButton"
                                  Margin="3 0 3 0"
                                  HorizontalAlignment="Left"     
                                  Padding="2"
                                  IsEnabled="{Binding IsPythonCodeExecute, Converter={StaticResource InverseBooleanConverter}}"
                                  IsChecked="{Binding ElementName=SourceEditor, Path=Options.ShowEndOfLine}">

                        <iconPacks:PackIconVaadinIcons Padding="2" Kind="Paragraph"/>
                    </ToggleButton>

                    <ToggleButton x:Name="ShowTabsButton"
                                  HorizontalAlignment="Left"     
                                  Padding="2"
                                  IsEnabled="{Binding IsPythonCodeExecute, Converter={StaticResource InverseBooleanConverter}}"
                                  IsChecked="{Binding ElementName=SourceEditor,Path=Options.ShowTabs}">
                        <iconPacks:PackIconVaadinIcons Padding="2" Kind="Tab"/>
                    </ToggleButton>


                    <Button Margin="7 0 0 0"
                            Padding="2"
                            IsEnabled="{Binding IsPythonCodeExecute, Converter={StaticResource InverseBooleanConverter}}"
                            Command="{Binding CopyToClipboardDelegateCommand}">

                        <iconPacks:PackIconMaterial Padding="2" Kind="ContentCopy" />

                    </Button>

                

                    <Button HorizontalAlignment="Left" 
                            Padding="2"
                            Foreground="SpringGreen"
                            Command="{Binding RunPythonCodeDelegateCommand}">
                        <iconPacks:PackIconMicrons  Padding="2" Kind="Play"/>
                    </Button>

                    <Button HorizontalAlignment="Left" 
                            Margin="3 0 7 0"
                            Foreground="Red"
                            Padding="2"
                            Command="{Binding StopPythonCodeExecuteDelegateCommand}">
                    <iconPacks:PackIconModern Padding="2" Kind="DebugStop" />
                    </Button>

                    <Button HorizontalAlignment="Left"
                            Padding="2"
                            Command="{Binding ToZeroPositionDelegateCommand}">

                        <iconPacks:PackIconMaterial Padding="2"  Kind="HomeFloor0"/>

                    </Button>


                    <!--<TextBlock Text="Среда выполнения: "/>-->
                        <TextBlock Margin="0 0 10 0"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center" 
                                   Text="{Binding PythonVersion}"
                                   Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"/>
                        <!--<TextBlock Text="{Binding PythonBinPath, StringFormat={} {0}}"/>-->
                        <!--<TextBlock Text="{Binding PythonWorkDir, StringFormat={} {0}}"/>-->
                    
                </DockPanel>

            <Border DockPanel.Dock="Top" BorderThickness="0 1 0 0" Margin="0 0 -5 0"/>

            <avalonEdit:TextEditor DockPanel.Dock="Top"
                                       Margin="7 5 0 0"
                                       x:Name="SourceEditor"
                                       FontFamily="Consolas"
				                       FontSize="13pt"
				                       FontStretch="Medium"
                                       HorizontalScrollBarVisibility="Auto"
                                       VerticalScrollBarVisibility="Auto"
                                       ScrollViewer.PanningMode="HorizontalOnly"
                                       IsReadOnly="{Binding IsChecked, ElementName=ReadOnlyButton, Converter={StaticResource InverseBooleanConverter}}"
                                       ShowLineNumbers="{Binding IsChecked, ElementName=ShowLineNumberButton}"
                                       SyntaxHighlighting="{Binding HighlightingDefinition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       IsEnabled="{Binding IsPythonCodeExecute, Converter={StaticResource InverseBooleanConverter}}"
                                       Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                       LineNumbersForeground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                       Background="{DynamicResource MahApps.Brushes.ThemeBackground}">

                    <i:Interaction.Behaviors>
                        <behaviors:AvalonEditBehaviour Text="{Binding SourceTextEditor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </i:Interaction.Behaviors>
                </avalonEdit:TextEditor>

            </DockPanel>

            <!--#endregion-->

            <!--#region result expander -->

            <GridSplitter Grid.Column="0" 
                          Grid.Row="2" 
                          Grid.ColumnSpan="3" 
                          Height="1"
                          Background="{DynamicResource MahApps.Brushes.Control.Border}"/>

            <Expander  x:Name="ResultExpander"
                       Margin="0 0 0 0"
                       Grid.Row="3"
                       Grid.Column="0"
                       Grid.ColumnSpan="3" 
                       IsExpanded="False"
                       BorderThickness="1"
                       BorderBrush="{DynamicResource MahApps.Brushes.Text}"
                       ExpandDirection="Down"
                     
                       mah:HeaderedControlHelper.HeaderBackground="{DynamicResource MahApps.Brushes.Control.Background}"
                       mah:ControlsHelper.ContentCharacterCasing="Normal">

            <Expander.Header>
                <TextBlock Margin="5 0 0 0" Text="{DynamicResource ScratchControlView.Expander.Header.OutputData}"/>
            </Expander.Header>

                <DockPanel LastChildFill="True">

                    <Button DockPanel.Dock="Right"
                            VerticalAlignment="Top"
                            Margin="5 5 5 0"
                            
                            Command="{Binding CleanExecuteEditorDelegateCommand}">
                        <iconPacks:Codicons Kind="ClearAll"/>
                    </Button>


                    <TabControl DockPanel.Dock="Top"
                                Margin="5 5 5 0"
                                BorderThickness="1"
                                TabStripPlacement="Bottom"
                                mah:TabControlHelper.CloseButtonEnabled="False"
                                mah:HeaderedControlHelper.HeaderFontSize="13"
                                mah:TabControlHelper.Underlined="SelectedTabItem"
                                mah:TabControlHelper.UnderlinePlacement="Top"
                                
                                mah:TabControlHelper.UnderlineSelectedBrush="{DynamicResource MahApps.Brushes.Text}"
                                mah:TabControlHelper.UnderlineBrush="{DynamicResource MahApps.Brushes.Text}"
                                BorderBrush="{DynamicResource MahApps.Brushes.Text}"
                                Height="{Binding Path=BlocklySourceEditorHeight, Mode=TwoWay, 
                                                 Converter={StaticResource GridLengthConverter},  
                                                 Source={x:Static properties:Settings.Default }}">

                        <mah:MetroTabItem Header="{DynamicResource ScratchControlView.MetroTabItem.Header.Result}">

                            <TextBox x:Name="TextResulEditor"
                                     Margin="0 0 0 0"
                                     BorderThickness="0"
                                     HorizontalScrollBarVisibility="Auto"
                                     VerticalScrollBarVisibility="Auto"                 
                                     IsReadOnly="True"
                                     Text="{Binding ResultText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                        </mah:MetroTabItem>

                        <mah:MetroTabItem Header="{DynamicResource ScratchControlView.MetroTabItem.Header.ExecutionTime}">
                            <StackPanel Margin="5 5 0 0">
                                <TextBox BorderThickness="0" Text="{Binding ResultExecutionTime.Succeesed, StringFormat=Succeesed: {0}}" />
                                <TextBox BorderThickness="0" Text="{Binding ResultExecutionTime.ExitCode, StringFormat=Exit code: {0} }" />
                                <TextBox BorderThickness="0" Text="{Binding ResultExecutionTime.StartTime, StringFormat=Start time: {0:HH:mm.ss.m}}" />
                                <TextBox BorderThickness="0" Text="{Binding ResultExecutionTime.EndTime, StringFormat=End time: {0:HH:mm.ss.m}}" />
                                <TextBox BorderThickness="0" Text="{Binding ResultExecutionTime.RunTime, StringFormat=Run time (ms): {0} }" />
                                
                                <TextBox BorderThickness="0" Text="{Binding ResultExecutionTime.StandardError}"/>
                            </StackPanel>
                        
                        </mah:MetroTabItem>

                        <mah:MetroTabItem Header="{DynamicResource ScratchControlView.MetroTabItem.Header.InitilizationTime}">
                            <StackPanel Margin="5 5 0 0">
                                <TextBox BorderThickness="0" Text="{Binding ResultInitilizationTime.Succeesed, StringFormat=Succeesed: {0}}" />
                                <TextBox BorderThickness="0" Text="{Binding ResultInitilizationTime.ExitCode, StringFormat=Exit code: {0} }" />
                                <TextBox BorderThickness="0" Text="{Binding ResultInitilizationTime.StartTime, StringFormat=Start time: {0:HH:mm.ss.m}}" />
                                <TextBox BorderThickness="0" Text="{Binding ResultInitilizationTime.EndTime, StringFormat=End time: {0:HH:mm.ss.m}}" />
                                <TextBox BorderThickness="0" Text="{Binding ResultInitilizationTime.RunTime, StringFormat=Run time (ms): {0} }" />
                                
                                <TextBox BorderThickness="0" Text="{Binding ResultInitilizationTime.StandardError}"/>
                                
                            </StackPanel>
                        </mah:MetroTabItem>

                    </TabControl>
                </DockPanel>
            </Expander>

            <!--#endregion-->

        </Grid>
    
</UserControl>
